version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:13
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./dockerConfig/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5434:5432

  redis:
    container_name: redis
    image: redis:6-alpine
    volumes:
      - redis_volume:/data
    ports:
      - 6380:6379

  mtl-backend:
    container_name: mtl-backend
    restart: always
    depends_on:
      - postgres
      - redis
    build:
      context: ./backend
      target: dependencies
    ports:
      - 3333:3333
    environment:
      - PORT=3333
      - HOST=0.0.0.0
      - NODE_ENV=production
      - APP_KEY=aJlvN7396Eq5j_LNiKz2kYjBMBEV7iL2
      - DRIVE_DISK=local
      - DB_CONNECTION=pg
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB_NAME=mtl_test
      - REDIS_CONNECTION=local
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - ./backend:/home/node/app
    command: dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0"

  mtl-frontend:
    container_name: mtl-frontend
    restart: always
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: http://localhost:3333
    ports:
      - 3001:3000
    environment:
      - PORT=3000

volumes:
  postgres_volume:
  redis_volume:
